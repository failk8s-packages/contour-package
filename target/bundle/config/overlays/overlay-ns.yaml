#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@ if/end not data.values.create_namespace:
#@overlay/match by=overlay.subset({"kind":"Namespace", "metadata":{"name": "projectcontour"}})
#@overlay/remove
---

#@overlay/match by=overlay.subset({"kind":"Namespace", "metadata":{"name": "projectcontour"}}), expects=[0,1]
---
apiVersion: v1
kind: Namespace
metadata:
  name: #@ data.values.namespace

#@overlay/match by=overlay.subset({"metadata": {"namespace": "projectcontour"}}), expects="1+"
---
metadata:
  #@overlay/match missing_ok=True
  namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind":"RoleBinding"}),expects=[1,2]
---
subjects:
#@overlay/match by=overlay.all
- kind: ServiceAccount
  namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind":"ClusterRoleBinding", "metadata": {"name": "contour"}})
---
subjects:
#@overlay/match by=overlay.all
- kind: ServiceAccount
  namespace: #@ data.values.namespace

#@overlay/match by=overlay.subset({"kind":"CustomResourceDefinition", "metadata": {"name": "contourconfigurations.projectcontour.io"}})
---
spec:
  versions:
  #@overlay/match by="name"
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              envoy:
                default:
                  service:
                    name: envoy
                    namespace: #@ data.values.namespace
                properties:
                  service:
                    default:
                      name: envoy
                      namespace: #@ data.values.namespace
              leaderElection:
                default:
                  configmap:
                    name: leader-elect
                    namespace: #@ data.values.namespace


#@overlay/match by=overlay.subset({"kind":"CustomResourceDefinition", "metadata": {"name": "contourdeployments.projectcontour.io"}})
---
spec:
  versions:
  #@overlay/match by="name"
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              config:
                properties:
                  envoy:
                    default:
                      service:
                        name: envoy
                        namespace: #@ data.values.namespace
                    properties:
                      service:
                        default:
                          name: envoy
                          namespace: #@ data.values.namespace
                  leaderElection:
                    default:
                      configmap:
                        name: leader-elect
                        namespace: #@ data.values.namespace